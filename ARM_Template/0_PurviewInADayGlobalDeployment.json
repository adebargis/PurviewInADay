{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Define your resources locations."
            }
        },
        "storageAccountName": {
            "type": "String",
            "metadata": {
                "description": "Define your storage account name."
            }
        },
        "factoryName": {
            "type": "String",
            "metadata": {
                "description": "Define your Azure Datafactory name."
            }
        },
        "datafactoryLocation": {
            "type": "String",
            "allowedValues": [
                "Australia East",
                "Canada Central",
                "Central US",
                "East US",
                "East US 2",
                "Japan East",
                "North Europe",
                "South Central US",
                "Southeast Asia",
                "UK South",
                "West Central US",
                "West Europe",
                "West US",
                "West US 2"
            ]
        },
        "SQLserverName": {
            "type": "String"
        },
        "SQLdatabaseName": {
            "type": "String"
        },
        "SQLadministratorLogin": {
            "type": "String"
        },
        "SQLadministratorLoginPassword": {
            "type": "SecureString"
        }
    },
    "variables": {
        "tenanId": "[subscription().tenantId]",
        "subscriptionId": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "sqlServerName": "[concat(parameters('SQLserverName'),'-', uniqueString(subscription().id, resourceGroup().id))]",
        "databaseName": "sample-db",
        "databaseEdition": "Basic",
        "databaseCollation": "SQL_Latin1_General_CP1_CI_AS",
        "databaseServiceObjectiveName": "Basic",
        "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('resourceGroupName'), parameters('location'))]",
        "storageName": "[tolower(concat(parameters('storageAccountName'), variables('uniqueStorage')))]",
        "allowAzureIps": true,
        "enableATP": false,
        "supportsHttpsTrafficOnly": true,
        "isHnsEnabled": true,
        "storagekind": "StorageV2",
        "accountType": "Standard_LRS",
        "accessTier": "Hot",
        "apiVersion": "2018-06-01",
        "adfUniqueName": "[concat(parameters('factoryName'),'-', uniqueString(subscription().id, resourceGroup().id))]",
        "factoryId": "[concat('Microsoft.DataFactory/factories/', variables('adfUniqueName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-09-01",
            "name": "[variables('storageName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "[variables('storagekind')]",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageName'), '/default/public')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageName'), '/default/sensible')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "name": "[variables('sqlServerName')]",
            "apiVersion": "2021-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "[parameters('SQLadministratorLogin')]",
                "administratorLoginPassword": "[parameters('SQLadministratorLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "type": "databases",
                    "sku": {
                        "name": "Basic",
                        "tier": "Basic",
                        "capacity": 5
                    },
                    "name": "[parameters('SQLdatabaseName')]",
                    "apiVersion": "2021-08-01-preview",
                    "location": "[parameters('location')]",
                    "properties": {
                        "sampleName": "AdventureWorksLT"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.DataFactory/factories",
            "name": "[variables('adfUniqueName')]",
            "apiVersion": "2018-06-01",
            "location": "[parameters('datafactoryLocation')]",
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/2_ProductPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Product data flow",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "CreateReportTable_Flow",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "Country": {},
                                    "CreditCard": {},
                                    "CustomerList": {},
                                    "Product": {},
                                    "Sales": {},
                                    "CreateProductView": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "Purview in a day"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T14:09:29Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/CreateReportTable_Flow')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/1_CopyToSQLDB')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Copy From Datalake to Azure SQL DB ",
                "activities": [
                    {
                        "name": "Franmer_CopyFilestoDB",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "CopyToDB_Flow",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "Country": {},
                                    "Products": {},
                                    "CreditCard": {},
                                    "Customers": {},
                                    "Sales": {},
                                    "SQLCountry": {},
                                    "SQLProducts": {},
                                    "SQLCreditCard": {},
                                    "SQLCustomers": {},
                                    "SQLSales": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "Execute Pipeline1",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Franmer_CopyFilestoDB",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "2_ProductPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "folder": {
                    "name": "Purview in a day"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T14:09:30Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/CopyToDB_Flow')]",
                "[concat(variables('factoryId'), '/pipelines/2_ProductPipeline')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/CopyFiles_Pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Pipeline to copy files in demo environment",
                "activities": [
                    {
                        "name": "CopyPublicFiles_Loop",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.PublicFiles",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "CopyPublicFiles",
                                    "description": "Copy public files from Github",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "BinarySource",
                                            "storeSettings": {
                                                "type": "HttpReadSettings",
                                                "requestMethod": "GET"
                                            },
                                            "formatSettings": {
                                                "type": "BinaryReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "BinarySink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Github_PublicFiles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FileName": {
                                                    "value": "@item()",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ADLS_Public",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "CopySensibleFiles-Loop",
                        "type": "ForEach",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.SensibleFiles",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "CopySensibleFiles",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "BinarySource",
                                            "storeSettings": {
                                                "type": "HttpReadSettings",
                                                "requestMethod": "GET"
                                            },
                                            "formatSettings": {
                                                "type": "BinaryReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "BinarySink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Github_SensibleFiles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FileName": {
                                                    "value": "@item()",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ADLS_Sensible",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "PublicFiles": {
                        "type": "array",
                        "defaultValue": [
                            "Country.csv",
                            "Products.csv",
                            "SalesWithCustomerID.csv"
                        ]
                    },
                    "SensibleFiles": {
                        "type": "array",
                        "defaultValue": [
                            "CustomersListandInfo.csv",
                            "ProductCreditCard.txt"
                        ]
                    }
                },
                "folder": {
                    "name": "0_FilesSetup"
                },
                "annotations": [],
                "lastPublishTime": "2022-08-30T16:24:25Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Github_PublicFiles')]",
                "[concat(variables('factoryId'), '/datasets/ADLS_Public')]",
                "[concat(variables('factoryId'), '/datasets/Github_SensibleFiles')]",
                "[concat(variables('factoryId'), '/datasets/ADLS_Sensible')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/SQL_Products')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/SQLDB"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ProductID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ProductName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Image",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Products"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/SQL_Country')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/SQLDB"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "CountryID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CountryName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Flag",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Country"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/SQL_Sales')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/SQLDB"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "SalesID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ProductID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CountryID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Nb_Sales",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Objectif",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CustomerID",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Sales"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/SQL_CreditCard')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/SQLDB"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "CustomerCreditCardI",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CustomerId",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CardType",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CardNumber",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ExpiryMonth",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ExpiryYear",
                        "type": "nvarchar"
                    },
                    {
                        "name": "card verification",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "CreditCard"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/SQL_CustomerList')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/SQLDB"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "CustomerID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Nom",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Prenom",
                        "type": "nvarchar"
                    },
                    {
                        "name": "NAS",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Phone",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Country",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Card",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "CustomerList"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/ADLS_Sensible')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0_Setup/DataLake"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "sensible"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/ADLS_Public')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0_Setup/DataLake"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "public"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/ADLS_Products')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/DataLake/Non-Sensible"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "Products.csv",
                        "fileSystem": "public"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "ProductID",
                        "type": "String"
                    },
                    {
                        "name": "ProductName",
                        "type": "String"
                    },
                    {
                        "name": "Image",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/ADLS_CreditCard')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/DataLake/Sensible"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "ProductCreditCard.txt",
                        "fileSystem": "sensible"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "CustomerCreditCardI",
                        "type": "String"
                    },
                    {
                        "name": "CustomerId",
                        "type": "String"
                    },
                    {
                        "name": "CardType",
                        "type": "String"
                    },
                    {
                        "name": "CardNumber",
                        "type": "String"
                    },
                    {
                        "name": "ExpiryMonth",
                        "type": "String"
                    },
                    {
                        "name": "ExpiryYear",
                        "type": "String"
                    },
                    {
                        "name": "card verification",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/SQL_ProductReportTable')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Target/SQLDB"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "table": "ProductReportTable"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/ADLS_Sales')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/DataLake/Non-Sensible"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "SalesWithCustomerID.csv",
                        "fileSystem": "public"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "SalesID",
                        "type": "String"
                    },
                    {
                        "name": "ProductID",
                        "type": "String"
                    },
                    {
                        "name": "CountryID",
                        "type": "String"
                    },
                    {
                        "name": "Nb_Sales",
                        "type": "String"
                    },
                    {
                        "name": "Objectif",
                        "type": "String"
                    },
                    {
                        "name": "CustomerID",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/ADLS_Country')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/DataLake/Non-Sensible"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "Country.csv",
                        "fileSystem": "public"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "CountryID",
                        "type": "String"
                    },
                    {
                        "name": "CountryName",
                        "type": "String"
                    },
                    {
                        "name": "Flag",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/ADLS_CustomerList')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "PurviewInADay/Source/DataLake/Sensible"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "CustomersListandInfo.csv",
                        "fileSystem": "sensible"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "CustomerID",
                        "type": "String"
                    },
                    {
                        "name": "Nom",
                        "type": "String"
                    },
                    {
                        "name": "Prenom",
                        "type": "String"
                    },
                    {
                        "name": "NAS",
                        "type": "String"
                    },
                    {
                        "name": "Phone",
                        "type": "String"
                    },
                    {
                        "name": "Country",
                        "type": "String"
                    },
                    {
                        "name": "Card",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/Github_PublicFiles')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Github_PublicFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "FileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "0_Setup/Github"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "HttpServerLocation",
                        "relativeUrl": {
                            "value": "@dataset().FileName",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Github_PublicFiles')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/Github_SensibleFiles')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Github_SensibleFiles",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "FileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "0_Setup/Github"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "HttpServerLocation",
                        "relativeUrl": {
                            "value": "@dataset().FileName",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/Github_SensibleFiles')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/CopyToDB_Flow')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Purview in a Day"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ADLS_Country",
                                "type": "DatasetReference"
                            },
                            "name": "Country"
                        },
                        {
                            "dataset": {
                                "referenceName": "ADLS_Products",
                                "type": "DatasetReference"
                            },
                            "name": "Products"
                        },
                        {
                            "dataset": {
                                "referenceName": "ADLS_CreditCard",
                                "type": "DatasetReference"
                            },
                            "name": "CreditCard"
                        },
                        {
                            "dataset": {
                                "referenceName": "ADLS_CustomerList",
                                "type": "DatasetReference"
                            },
                            "name": "Customers"
                        },
                        {
                            "dataset": {
                                "referenceName": "ADLS_Sales",
                                "type": "DatasetReference"
                            },
                            "name": "Sales"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SQL_Country",
                                "type": "DatasetReference"
                            },
                            "name": "SQLCountry"
                        },
                        {
                            "dataset": {
                                "referenceName": "SQL_Products",
                                "type": "DatasetReference"
                            },
                            "name": "SQLProducts"
                        },
                        {
                            "dataset": {
                                "referenceName": "SQL_CreditCard",
                                "type": "DatasetReference"
                            },
                            "name": "SQLCreditCard"
                        },
                        {
                            "dataset": {
                                "referenceName": "SQL_CustomerList",
                                "type": "DatasetReference"
                            },
                            "name": "SQLCustomers"
                        },
                        {
                            "dataset": {
                                "referenceName": "SQL_Sales",
                                "type": "DatasetReference"
                            },
                            "name": "SQLSales"
                        }
                    ],
                    "transformations": [],
                    "scriptLines": [
                        "source(output(",
                        "          CountryID as string,",
                        "          CountryName as string,",
                        "          Flag as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> Country",
                        "source(output(",
                        "          ProductID as string,",
                        "          ProductName as string,",
                        "          Image as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> Products",
                        "source(output(",
                        "          CustomerCreditCardI as string,",
                        "          CustomerId as string,",
                        "          CardType as string,",
                        "          CardNumber as string,",
                        "          ExpiryMonth as string,",
                        "          ExpiryYear as string,",
                        "          {card verification} as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> CreditCard",
                        "source(output(",
                        "          CustomerID as string,",
                        "          Nom as string,",
                        "          Prenom as string,",
                        "          NAS as string,",
                        "          Phone as string,",
                        "          Country as string,",
                        "          Card as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> Customers",
                        "source(output(",
                        "          SalesID as string,",
                        "          ProductID as string,",
                        "          CountryID as string,",
                        "          Nb_Sales as string,",
                        "          Objectif as string,",
                        "          CustomerID as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> Sales",
                        "Country sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          CountryID as string,",
                        "          CountryName as string,",
                        "          Flag as string",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     recreate:true,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError') ~> SQLCountry",
                        "Products sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          ProductID as string,",
                        "          ProductName as string,",
                        "          Image as string",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     recreate:true,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError') ~> SQLProducts",
                        "CreditCard sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          CustomerCreditCardI as string,",
                        "          CustomerId as string,",
                        "          CardType as string,",
                        "          CardNumber as string,",
                        "          ExpiryMonth as string,",
                        "          ExpiryYear as string,",
                        "          {card verification} as string",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     recreate:true,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError') ~> SQLCreditCard",
                        "Customers sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          CustomerID as string,",
                        "          Nom as string,",
                        "          Prenom as string,",
                        "          NAS as string,",
                        "          Phone as string,",
                        "          Country as string,",
                        "          Card as string",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     recreate:true,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError') ~> SQLCustomers",
                        "Sales sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          SalesID as string,",
                        "          ProductID as string,",
                        "          CountryID as string,",
                        "          Nb_Sales as string,",
                        "          Objectif as string,",
                        "          CustomerID as string",
                        "     ),",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     recreate:true,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError') ~> SQLSales"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ADLS_Country')]",
                "[concat(variables('factoryId'), '/datasets/ADLS_Products')]",
                "[concat(variables('factoryId'), '/datasets/ADLS_CreditCard')]",
                "[concat(variables('factoryId'), '/datasets/ADLS_CustomerList')]",
                "[concat(variables('factoryId'), '/datasets/ADLS_Sales')]",
                "[concat(variables('factoryId'), '/datasets/SQL_Country')]",
                "[concat(variables('factoryId'), '/datasets/SQL_Products')]",
                "[concat(variables('factoryId'), '/datasets/SQL_CreditCard')]",
                "[concat(variables('factoryId'), '/datasets/SQL_CustomerList')]",
                "[concat(variables('factoryId'), '/datasets/SQL_Sales')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/CreateReportTable_Flow')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "Purview in a Day"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "SQL_Country",
                                "type": "DatasetReference"
                            },
                            "name": "Country"
                        },
                        {
                            "dataset": {
                                "referenceName": "SQL_CreditCard",
                                "type": "DatasetReference"
                            },
                            "name": "CreditCard"
                        },
                        {
                            "dataset": {
                                "referenceName": "SQL_CustomerList",
                                "type": "DatasetReference"
                            },
                            "name": "CustomerList"
                        },
                        {
                            "dataset": {
                                "referenceName": "SQL_Products",
                                "type": "DatasetReference"
                            },
                            "name": "Product"
                        },
                        {
                            "dataset": {
                                "referenceName": "SQL_Sales",
                                "type": "DatasetReference"
                            },
                            "name": "Sales"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "SQL_ProductReportTable",
                                "type": "DatasetReference"
                            },
                            "name": "CreateProductView"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FullName"
                        },
                        {
                            "name": "join1"
                        },
                        {
                            "name": "join2"
                        },
                        {
                            "name": "join3"
                        },
                        {
                            "name": "join4"
                        },
                        {
                            "name": "SelectColumns"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          CountryID as string,",
                        "          CountryName as string,",
                        "          Flag as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> Country",
                        "source(output(",
                        "          CustomerCreditCardI as string,",
                        "          CustomerId as string,",
                        "          CardType as string,",
                        "          CardNumber as string,",
                        "          ExpiryMonth as string,",
                        "          ExpiryYear as string,",
                        "          {card verification} as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> CreditCard",
                        "source(output(",
                        "          CustomerID as string,",
                        "          Nom as string,",
                        "          Prenom as string,",
                        "          NAS as string,",
                        "          Phone as string,",
                        "          Country as string,",
                        "          Card as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> CustomerList",
                        "source(output(",
                        "          ProductID as string,",
                        "          ProductName as string,",
                        "          Image as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> Product",
                        "source(output(",
                        "          SalesID as string,",
                        "          ProductID as string,",
                        "          CountryID as string,",
                        "          Nb_Sales as string,",
                        "          Objectif as string,",
                        "          CustomerID as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> Sales",
                        "CustomerList derive({Full Name} = Prenom + ' ' + Nom) ~> FullName",
                        "Sales, Country join(Sales@CountryID == Country@CountryID,",
                        "     joinType:'left',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join1",
                        "join1, FullName join(Sales@CustomerID == CustomerList@CustomerID,",
                        "     joinType:'left',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join2",
                        "join2, Product join(Sales@ProductID == Product@ProductID,",
                        "     joinType:'left',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join3",
                        "join3, CreditCard join(CustomerList@CustomerID == CreditCard@CustomerId,",
                        "     joinType:'left',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join4",
                        "join4 select(mapColumn(",
                        "          SalesID,",
                        "          Nb_Sales,",
                        "          Objectif,",
                        "          CountryName,",
                        "          Flag,",
                        "          Nom,",
                        "          Prenom,",
                        "          NAS,",
                        "          Phone,",
                        "          Country,",
                        "          Card,",
                        "          {Full Name},",
                        "          ProductName,",
                        "          Image,",
                        "          CardType,",
                        "          CardNumber,",
                        "          ExpiryMonth,",
                        "          ExpiryYear,",
                        "          {card verification}",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> SelectColumns",
                        "SelectColumns sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     deletable:false,",
                        "     insertable:true,",
                        "     updateable:false,",
                        "     upsertable:false,",
                        "     recreate:true,",
                        "     format: 'table',",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     errorHandlingOption: 'stopOnFirstError') ~> CreateProductView"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SQL_Country')]",
                "[concat(variables('factoryId'), '/datasets/SQL_CreditCard')]",
                "[concat(variables('factoryId'), '/datasets/SQL_CustomerList')]",
                "[concat(variables('factoryId'), '/datasets/SQL_Products')]",
                "[concat(variables('factoryId'), '/datasets/SQL_Sales')]",
                "[concat(variables('factoryId'), '/datasets/SQL_ProductReportTable')]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/AzureSqlDatabase')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [
                    "Purview in a day"
                ],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": ""
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('adfUniqueName'))]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/AzureDataLakeStorage')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [
                    "Purview in a day"
                ],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "connectionString": ""
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('adfUniqueName'))]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/Github_PublicFiles')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [
                    "Purview in a day"
                ],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "https://raw.githubusercontent.com/franmer2/PurviewInADay/main/Files/Public/",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('adfUniqueName'))]"
            ]
        },
        {
            "name": "[concat(variables('adfUniqueName'), '/Github_SensibleFiles')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [
                    "Purview in a day"
                ],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "https://raw.githubusercontent.com/franmer2/PurviewInADay/main/Files/Sensible/",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('adfUniqueName'))]"
            ]
        }
    ]
}